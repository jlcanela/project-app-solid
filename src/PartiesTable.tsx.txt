import {
    QueryClient,
    QueryClientProvider,
    createQuery,
  } from '@tanstack/solid-query'
  
import { request } from 'graphql-request';
import { graphql,/*  PartiesDocument, PartiesQuery */ } from './gql';

const PartiesDocument = graphql(`query Parties {
  identity_parties {
    party_id
    name
  }
}`);

const fetchParties = async () => {
  const endpoint = 'http://localhost:8080/v1/graphql';
  return request(endpoint, PartiesDocument);
};

const queryClient = new QueryClient();

const PartiesTable = () => {


    const { data, error, isLoading } = createQuery(() => {
        queryKey: ['parties'],
        queryFn: fetchParties,
      });
 // const { data, error, isLoading } = useQuery<PartiesQuery>({
    
 // });

  if (isLoading) return <div>Loading...</div>;
  if (error) return <div>Error loading parties</div>;

  return (
    <QueryClientProvider client={queryClient}>
    <table>
      <thead>
        <tr>
          <th>Party ID</th>
          <th>Name</th>
        </tr>
      </thead>
      <tbody>
        {data?.identity_parties.map((party) => (
          <tr key={party.party_id}>
            <td>{party.party_id}</td>
            <td>{party.name}</td>
          </tr>
        ))}
      </tbody>
    </table>
    </QueryClientProvider>
  );
};

export default PartiesTable;
